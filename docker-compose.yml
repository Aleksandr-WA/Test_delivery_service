services:
  db:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: ${DB__DATABASE}
      MYSQL_USER: ${DB__USER}
      MYSQL_PASSWORD: ${DB__PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT__USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT__PASSWORD}
    env_file:
      - .env

  redis:
    image: redis:latest
    container_name: my_redis
    ports:
      - "6379:6379"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_app
    command:
      sh -c "
      poetry run alembic upgrade head &&
      poetry run uvicorn main:main_app --host 0.0.0.0 --port 8000 --reload
      "
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  dramatiq:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dramatiq_app
    command: >
      sh -c "
      poetry run dramatiq tasks.worker
      "
    depends_on:
      - rabbitmq
      - redis

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - app

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  db_data:
  prometheus_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./prometheus_data
  grafana_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./grafana_data
